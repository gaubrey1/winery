{"version":3,"sources":["components/minter/Cover.js","components/ui/Notifications.js","utils/index.js","utils/constants.js","components/ui/Identicon.js","components/wallet/index.js","hooks/useWineryContract.js","hooks/useContract.js","utils/minter.js","components/minter/nfts/Add.js","components/minter/nfts/Card.js","components/ui/Loader.js","components/minter/nfts/index.js","assets/logo.png","App.js","hooks/useBalance.js","reportWebVitals.js","index.js"],"names":["Cover","connect","className","onClick","catch","e","console","log","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","text","NotificationError","DefaultProps","defaultProps","truncateAddress","address","slice","length","formatBigNumber","num","shiftedBy","toFixed","Identicon","size","rest","ref","useRef","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","style","width","height","Wallet","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","Spinner","animation","Menu","Item","href","target","Stack","direction","gap","Divider","as","useWineryContract","abi","contractAddress","useContractKit","getConnectedKit","useState","contract","setContract","getContract","useCallback","kit","web3","eth","Contract","useContract","wineryAbi","wineryContractAddress","Winery","formattedName","name","trim_name","trim","includes","replace","makeFileObjects","file","blob","Blob","JSON","stringify","type","File","client","Web3Storage","token","storeFiles","files","put","cid","createWineNft","minterContract","performActions","price","ipfsImage","description","defaultAccount","file_name","data","image","owner","file_cid","url","_price","ethers","utils","parseUnits","String","methods","addWine","send","from","transaction","uploadToIpfs","image_name","image_cid","image_url","getWine","nfts","getWineLength","call","nftsLength","Number","i","nft","Promise","resolve","wine","tokenURI","wineURI","fetchNftMeta","wineData","fetchNftOwner","index","wineId","sold","push","all","ipfsUrl","fetch","fetch_meta","json","meta","ownerOf","fetchNftContractOwner","buyWine","value","error","giftWineNft","receiverAddress","giftWine","AddNfts","save","setName","setIpfsImage","setDescription","setPrice","show","setShow","handleClose","class","Modal","onHide","centered","Header","Title","color","textAlign","Body","Form","Control","placeholder","fontSize","onChange","image_file","imageUrl","alert","Footer","disabled","Nft","buyNft","receiverAdd","setAddress","handleShow","Col","src","alt","btnText","buttonFunc","Loader","role","NftList","setNfts","loading","setLoading","setNftOwner","getNFTAssets","allNfts","addNft","toast","fetchContractOwner","_address","giftNft","Add","Row","xs","sm","lg","map","_nft","App","balance","setBalance","getBalance","getTotalBalance","useBalance","wineryContract","Nav","logo","CELO","Container","fluid","updateBalance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","networks","Alfajores","network","NetworkNames","rpcUrl","graphQl","explorer","chainId","dapp","document","getElementById"],"mappings":"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","file":"static/js/main.86fdca62.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Cover = ({ connect }) => {\r\n    return (\r\n      <div className=\"cover_page d-flex align-items-center\">\r\n        <div className=\"cover_header d-flex align-items-center\">\r\n          <div className=\"cover_text\">\r\n            <h1>New Luxury vintage wine made into extraordinary NFTs</h1>\r\n            <p>\r\n              We offer a great variety of vintage wines made into NFT for \r\n              every price point and any occassion\r\n            </p>\r\n            <button\r\n              onClick={() => connect().catch((e) => console.log(e))}\r\n            >\r\n              Get started\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Cover;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {ToastContainer} from 'react-toastify';\r\n\r\nconst Notification = () => (\r\n  <ToastContainer\r\n    position=\"bottom-center\"\r\n    autoClose={5000}\r\n    hideProgressBar\r\n    newestOnTop\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nconst NotificationSuccess = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst NotificationError = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst Props = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nconst DefaultProps = {\r\n  text: '',\r\n};\r\n\r\nNotificationSuccess.propTypes = Props;\r\nNotificationSuccess.defaultProps = DefaultProps;\r\n\r\nNotificationError.propTypes = Props;\r\nNotificationError.defaultProps = DefaultProps;\r\n\r\nexport { Notification, NotificationSuccess, NotificationError };\r\n","import {ERC20_DECIMALS} from \"./constants\";\r\n\r\n// format a wallet address\r\nexport const truncateAddress = (address) => {\r\n    if (!address) return\r\n    return address.slice(0, 5) + \"...\" + address.slice(address.length - 3, address.length);\r\n}\r\n\r\n// convert from big number\r\nexport const formatBigNumber = (num) => {\r\n    if (!num) return\r\n    return num.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n}","const ERC20_DECIMALS = 18;\r\nexport { ERC20_DECIMALS };\r\n","import { useEffect, useRef } from \"react\";\r\nimport Jazzicon from \"@metamask/jazzicon\";\r\n\r\nexport default function Identicon({address, size, ...rest}) {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    if (address && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(Jazzicon(size, parseInt(address.slice(2, 10), 16)));\r\n    }\r\n  }, [address, size]);\r\n\r\n  return (\r\n    <div {...rest} >\r\n        <div ref={ref} style={{width:`${size}px`,height:`${size}px`}}  />\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport {Dropdown, Stack, Spinner} from 'react-bootstrap';\r\nimport {formatBigNumber, truncateAddress} from '../../utils';\r\nimport Identicon from '../ui/Identicon';\r\n\r\n\r\nconst Wallet = ({address, amount, symbol, destroy}) => {\r\n    if (address) {\r\n        return <>\r\n{/* Wallet Dropdown functionality */}\r\n    <Dropdown>\r\n        <Dropdown.Toggle variant=\"light\" align=\"end\" id=\"dropdown-basic\"\r\n                            className=\"d-flex align-items-center border rounded-pill py-1\">\r\n            {amount ? (\r\n                <>{formatBigNumber(amount)} <span className=\"ms-1\"> {symbol}</span></>\r\n            ) : (<Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\"/>)}\r\n            <Identicon address={address} size={28} className=\"ms-2 me-1\"/>\r\n        </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu className=\"shadow-lg border-0\" >\r\n        <Dropdown.Item href={`https://alfajores-blockscout.celo-testnet.org/address/${address}/transactions`}  target=\"_blank\">     \r\n            <Stack direction=\"horizontal\" gap={2}>\r\n                <i className=\"bi bi-person-circle fs-4\" />\r\n                <span className=\"font-monospace\">{truncateAddress(address)}</span>\r\n            </Stack>\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n          <Dropdown.Item as=\"button\" className=\"d-flex align-items-center\" onClick={() => {\r\n              destroy()\r\n          }}>\r\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\"/>\r\n              Disconnect\r\n          </Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n    \r\n    </>\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;","import {useContract} from './useContract';\r\nimport wineryAbi from '../contracts/Winery.json';\r\nimport wineryContractAddress from '../contracts/Winery-address.json';\r\n\r\n\r\n// export interface for NFT contract\r\nexport const useWineryContract = () => useContract(wineryAbi.abi, wineryContractAddress.Winery);\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { useContractKit } from '@celo-tools/use-contractkit';\r\n\r\nexport const useContract = (abi, contractAddress) => {\r\n  const { getConnectedKit, address } = useContractKit();\r\n  const [contract, setContract] = useState(null);\r\n\r\n  const getContract = useCallback(async () => {\r\n    const kit = await getConnectedKit();\r\n\r\n    // get a contract interface to interact with\r\n    setContract(new kit.web3.eth.Contract(abi, contractAddress));\r\n  }, [getConnectedKit, abi, contractAddress]);\r\n\r\n  useEffect(() => {\r\n    if (address) getContract();\r\n  }, [address, getContract]);\r\n\r\n  return contract;\r\n};\r\n","import { Web3Storage } from \"web3.storage/dist/bundle.esm.min.js\"\r\nimport { ethers } from \"ethers\";\r\n\r\nconst getAccessToken  = () => {\r\n  return \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDAyZDE2OWM0Y0VhMDREQTNGMjQ4RDg5MDUwNjkxNzk2NWJkZjUxN2MiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NjI0MTU5OTM5NjQsIm5hbWUiOiJ3aW5lcnkifQ.dV9Ojvo_yX4QS9lYKcng-B1Vfu1vwmKIXyad_xcTNH8\"\r\n}\r\n\r\nconst makeStorageClient = () => {\r\n  return new Web3Storage({ token: getAccessToken() })\r\n}\r\n\r\nconst formattedName = (name) => {\r\n  let file_name;\r\n\r\n  const trim_name = name.trim() // removes extra whitespaces\r\n\r\n  if(trim_name.includes(\" \")) {\r\n    file_name = trim_name.replace(\" \", \"%20\")\r\n    \r\n    return file_name\r\n  }\r\n  else return trim_name\r\n}\r\n\r\nconst makeFileObjects = (file) => {\r\n  const blob = new Blob([JSON.stringify(file)], { type: 'application/json' })\r\n  const files = [\r\n    new File([blob], `${file.name}.json`)\r\n  ]\r\n  return files\r\n}\r\n\r\nconst client = makeStorageClient()\r\n\r\nconst storeFiles = async (files) => {\r\n  const cid = await client.put(files)\r\n  return cid\r\n}\r\n\r\n\r\n// mint an NFT\r\nexport const createWineNft = async (\r\n  minterContract,\r\n  performActions,\r\n  { name, price, ipfsImage, description }\r\n) => {\r\n  await performActions(async (kit) => {\r\n    if (!name || !description || !ipfsImage || !ipfsImage) return;\r\n    const { defaultAccount } = kit;\r\n\r\n    // trim any extra whitespaces from the name and \r\n    // replace the whitespace between the name with %20\r\n    const file_name = formattedName(name);\r\n\r\n    // convert NFT metadata to JSON format\r\n    const data = {\r\n      name,\r\n      price,\r\n      image: ipfsImage,\r\n      description,\r\n      owner: defaultAccount,\r\n    };\r\n    console.log(data)\r\n    console.log(`File name: \"${file_name}\"`)\r\n\r\n    try {\r\n      // save NFT metadata to IPFS\r\n      const files = makeFileObjects(data);\r\n      const file_cid = await storeFiles(files)\r\n\r\n      const url = `https://${file_cid}.ipfs.w3s.link/${file_name}.json`\r\n      const _price = ethers.utils.parseUnits(String(price), \"ether\");\r\n\r\n      // upload the NFT, mint the NFT and save the IPFS url to the blockchain\r\n      let transaction = await minterContract.methods\r\n        .addWine(name, ipfsImage, description, url, _price)\r\n        .send({ from: defaultAccount });\r\n\r\n      return transaction;\r\n    } catch (error) {\r\n      console.log(\"Error uploading file: \", error);\r\n    }\r\n  });\r\n};\r\n\r\n// function to upload an image to Web3.storage\r\nexport const uploadToIpfs = async (file) => {\r\n  if (!file) return;\r\n  try {\r\n    const file_name = file[0].name\r\n    const image_name = formattedName(file_name)\r\n\r\n    console.log(image_name)\r\n\r\n    console.log(`getting cid...`)\r\n\r\n    const image_cid = await storeFiles(file);\r\n    console.log(`Image cid: ${image_cid}`)\r\n\r\n    const image_url = `https://${image_cid}.ipfs.w3s.link/${image_name}`\r\n  \r\n    // const img = await image_f.files();\r\n    // console.log(typeof(img[0]))\r\n\r\n    // for (const file of img) {\r\n    //   console.log(file)\r\n\r\n    //   const image_url = `https://${file.cid}.ipfs.w3s.link/`;\r\n    //   console.log(`Image url: ${image_url}`)\r\n\r\n    //   return image_url;\r\n    // }\r\n    return image_url;\r\n  } catch (error) {\r\n    console.log(\"Error uploading file: \", error);\r\n  }\r\n};\r\n\r\n// fetch all NFTs on the smart contract\r\nexport const getWine = async (minterContract) => {\r\n  try {\r\n    const nfts = [];\r\n    const nftsLength = await minterContract.methods.getWineLength().call();\r\n\r\n    if(Number(nftsLength) >= 1) {\r\n      for (let i = 0; i < Number(nftsLength); i++) {\r\n        const nft = new Promise(async (resolve) => {\r\n          const wine = await minterContract.methods.getWine(i).call();\r\n          const wineURI = await minterContract.methods.tokenURI(i).call();\r\n          const wineData = await fetchNftMeta(wineURI);        \r\n          const owner = await fetchNftOwner(minterContract, i);\r\n  \r\n          resolve({\r\n            index: i,\r\n            owner,\r\n            name: wineData.name,\r\n            image: wineData.image,\r\n            description: wineData.description,\r\n            wineId: i,\r\n            price: wine[4],\r\n            sold: wine[5]\r\n          });\r\n        });\r\n        nfts.push(nft);\r\n      }\r\n      return Promise.all(nfts);\r\n    }\r\n    else {\r\n      console.log(\"No vintage wine saved on the smart contract\")\r\n    }\r\n    \r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n\r\n// get the metedata for an NFT from IPFS\r\nexport const fetchNftMeta = async (ipfsUrl) => {\r\n  try {\r\n    if (!ipfsUrl) return null;\r\n    const fetch_meta = await fetch(ipfsUrl);\r\n    console.log(fetch_meta)\r\n\r\n    const meta = await fetch_meta.json()\r\n\r\n    return meta;\r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n\r\n// get the owner address of an NFT\r\nexport const fetchNftOwner = async (minterContract, index) => {\r\n  try {\r\n    return await minterContract.methods.ownerOf(index).call();\r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n\r\n// get the address that deployed the NFT contract\r\nexport const fetchNftContractOwner = async (minterContract) => {\r\n  try {\r\n    let owner = await minterContract.methods.owner().call();\r\n    return owner;\r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n\r\nexport const buyWine = async (\r\n  minterContract,\r\n  wineId,\r\n  performActions\r\n) => {\r\n  try {\r\n    await performActions(async (kit) => {\r\n      const { defaultAccount } = kit;\r\n      const wine = await minterContract.methods.getWine(wineId).call();\r\n      await minterContract.methods\r\n        .buyWine(wineId)\r\n        .send({ from: defaultAccount, value: wine[4] });\r\n    });\r\n  } catch (error) {\r\n    console.log({ error });\r\n  }\r\n};\r\n\r\nexport const giftWineNft = async(\r\n  minterContract,\r\n  wineId,\r\n  receiverAddress,\r\n  performActions\r\n) => {\r\n  try {\r\n    await performActions(async (kit) => {\r\n      const { defaultAccount } = kit;\r\n      await minterContract.methods\r\n        .giftWine(wineId, receiverAddress)\r\n        .send({ from: defaultAccount });\r\n    });\r\n  } catch (error) {\r\n    console.log({ error });\r\n  }\r\n}\r\n  \r\nexport const getOwners = async (minterContract) => {\r\n  try {\r\n    const ownerCount = await minterContract.methods.getOwners().call();\r\n    return ownerCount;\r\n  } catch (error) {\r\n    console.log({ error });\r\n  }\r\n};\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport { uploadToIpfs } from \"../../../utils/minter\";\r\n\r\n\r\nconst AddNfts = ({ save }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [ipfsImage, setIpfsImage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n\r\n  // check if all form data has been filled\r\n  const isFormFilled = () => name && ipfsImage && price && description;\r\n      \r\n\r\n  // close the popup modal\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    // setAttributes([]);\r\n  };\r\n\r\n  // display the popup modal\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\"\r\n        onClick={handleShow}\r\n        className=\"add_wine_btn mb-4\"\r\n     >Add <i class=\"bi bi-plus\"></i></button>\r\n\r\n      {/* Modal */}\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header>\r\n          <Modal.Title\r\n            style={{ color: \"#531c1c\", width: \"100%\", textAlign: \"center\" }}\r\n          >Create Wine NFT</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Wine Name\"\r\n              className={\"mb-3\"}\r\n              style={{ height: \"45px\", fontSize: \"0.9rem\" }}\r\n              onChange={(e) => {\r\n                setName(e.target.value.trim());\r\n              }}\r\n            />\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Wine Description\"\r\n              className={\"mb-3\"}\r\n              style={{ height: \"80px\", fontSize: \"0.9rem\" }}\r\n              onChange={(e) => {\r\n                setDescription(e.target.value.trim());\r\n              }}\r\n            />\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Price\"\r\n              className={\"mb-3\"}\r\n              style={{ height: \"45px\", fontSize: \"0.9rem\" }}\r\n              onChange={(e) => {\r\n                setPrice(e.target.value);\r\n              }}\r\n            />\r\n            <Form.Control\r\n              type=\"file\"\r\n              placeholder=\"Wine Image\"\r\n              className={\"mb-3\"}\r\n              onChange={async (e) => {\r\n                console.log(e.target.files)\r\n                const image_file = e.target.files\r\n                console.log(image_file)\r\n                \r\n                const imageUrl = await uploadToIpfs(image_file);\r\n                if (!imageUrl) {\r\n                  alert(\"Failed to upload image\");\r\n                  return;\r\n                }\r\n                setIpfsImage(imageUrl);\r\n              }}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer  className=\"modal_footer\">\r\n          <button className=\"close_btn\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button\r\n            className=\"create_btn\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              save({\r\n                name,\r\n                price,\r\n                ipfsImage,\r\n                description\r\n              });\r\n              handleClose();\r\n            }}\r\n            >\r\n            Create NFT\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nAddNfts.propTypes = {\r\n\r\n  // props passed into this component\r\n  save: PropTypes.func.isRequired,\r\n  // address: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AddNfts;\r\n","import PropTypes from \"prop-types\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport { Col, Modal, Form } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\n// NFT Cards Functionality\r\nconst Nft = ({ nft, buyNft, data }) => {\r\n  const { image, description, owner, name, wineId, price, sold } = nft;\r\n  const { kit } = useContractKit();\r\n  const { defaultAccount } = kit;\r\n  \r\n  const [show, setShow] = useState(false);\r\n  const [receiverAdd, setAddress] = useState(\"\");\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  \r\n  const isFormFilled = () => price;\r\n\r\n  // Button function to display a particular button depending on the owner and the availability of the powerup\r\n  const buttonFunc = () => {\r\n    let btnText;\r\n    if(owner !== defaultAccount) {\r\n      sold ? btnText = <button className=\"sold_nft\">Sold</button> : btnText = <button className=\"buy_nft\" onClick={buyNft}>Buy<span> {price / 10 ** 18}cUSD</span></button>\r\n    }\r\n    else {\r\n      btnText = <button className=\"owned_nft\" onClick={handleShow}>Gift</button>\r\n    }\r\n    return <>{btnText}</>\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Col key={wineId} className=\"mb-5\">\r\n      <div className=\"wine_container d-flex flex-wrap\">\r\n        <div className=\"wine_image\">\r\n          <img src={image} alt={name}/>\r\n        </div>\r\n        \r\n        { sold ? (\r\n          <span className=\"sold_tag\">Sold</span>\r\n        ) : (\"\")}\r\n\r\n        <div className=\"wine_details\">\r\n          <h2 className=\"wine_name d-flex justify-content-around\">\r\n            {name}\r\n          </h2>\r\n          <p className=\"wine_desc\">{description}</p>\r\n        </div>\r\n\r\n        <div className=\"wine_btn d-flex gap-4 align-items-center justify-content-center\">\r\n          {buttonFunc()}\r\n        </div>\r\n      </div>\r\n    </Col>\r\n\r\n\r\n     {/* Modal For Gifting an NFT*/}\r\n    <Modal show={show} onHide={handleClose} centered>\r\n      <Modal.Header>\r\n        <Modal.Title\r\n          style={{ color: \"#531c1c\", width: \"100%\", textAlign: \"center\" }}\r\n        >Recipient's Wallet Address</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Wallet Address\"\r\n            className={\"mb-3\"}\r\n            style={{ height: \"45px\", fontSize: \"0.9rem\" }}\r\n            onChange={(e) => {\r\n              setAddress(e.target.value);\r\n            }}\r\n          />\r\n        </Form>\r\n      </Modal.Body>\r\n      \r\n      <Modal.Footer  className=\"modal_footer\">\r\n        <button className=\"close_btn\" onClick={handleClose}>\r\n          Close\r\n        </button>\r\n        <button\r\n          className=\"create_btn\"\r\n          disabled={!isFormFilled()}\r\n          onClick={() => {\r\n            data({\r\n              receiverAdd,\r\n              wineId\r\n            });\r\n            handleClose();\r\n          }}\r\n          >\r\n          Send\r\n        </button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nNft.propTypes = {\r\n  // props passed into this component\r\n  image: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default Nft;\r\n","import React from 'react';\r\nimport { Spinner} from \"react-bootstrap\";\r\nconst Loader = () => (\r\n \r\n \r\n  <div className=\"d-flex justify-content-center\">\r\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n\r\n);\r\nexport default Loader;\r\n","import { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport AddNfts from \"./Add\";\r\nimport Nft from \"./Card\";\r\nimport Loader from \"../../ui/Loader\";\r\nimport { NotificationSuccess, NotificationError } from \"../../ui/Notifications\";\r\nimport {\r\n  getWine,\r\n  buyWine,\r\n  createWineNft,\r\n  giftWineNft,\r\n  fetchNftContractOwner,\r\n} from \"../../../utils/minter\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nconst NftList = ({ minterContract, name }) => {\r\n  const { performActions, address } = useContractKit();\r\n  const [nfts, setNfts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [nftOwner, setNftOwner] = useState(null);\r\n\r\n  const getNFTAssets = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // fetch all nfts from the smart contract\r\n      const allNfts = await getWine(minterContract);\r\n      if (!allNfts) return;\r\n      setNfts(allNfts);\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [minterContract]);\r\n\r\n  // Add new NFT\r\n  const addNft = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // create an nft functionality\r\n      await createWineNft(minterContract, performActions, data);\r\n      toast(<NotificationSuccess text=\"Updating NFT list....\" />);\r\n      getNFTAssets();\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"Failed to create an NFT.\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Buy available NFT\r\n  const buyNft = async (wineId) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Create a buy NFT functionality\r\n      await buyWine(minterContract, wineId, performActions);\r\n      getNFTAssets();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchContractOwner = useCallback(async (minterContract) => {\r\n    // get the address that deployed the NFT contract\r\n    const _address = await fetchNftContractOwner(minterContract);\r\n    setNftOwner(_address);\r\n  }, []);\r\n\r\n  // Gift NFT to a particular user using their wallet address\r\n  const giftNft = async(data) => {\r\n    try {\r\n      setLoading(true)\r\n\r\n      const { receiverAdd, wineId } = data;\r\n\r\n      await giftWineNft(minterContract, wineId, receiverAdd, performActions);\r\n      getNFTAssets();\r\n    } catch (e) {\r\n      console.log(e)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (address && minterContract) {\r\n        getNFTAssets();\r\n        fetchContractOwner(minterContract);\r\n      }\r\n    } catch (error) {\r\n      console.log({ error });\r\n    }\r\n  }, [minterContract, address, getNFTAssets, fetchContractOwner]);\r\n\r\n  if (address) {\r\n    return (\r\n      <>\r\n        {!loading ? (\r\n          <>\r\n            <div className=\"marketplace\">\r\n              <h1\r\n                className=\"fs-10 fw-bold text-center mb-5\"\r\n                style={{color: \"#531c1c\"}}\r\n              >{name}</h1>\r\n              <AddNfts save={addNft} address={address} />\r\n            </div>\r\n            <Row xs={1} sm={2} lg={3} className=\"g-3  mb-5 g-xl-4 g-xxl-5\">\r\n              {/* display all NFTs */}\r\n              {nfts.map((_nft) => (\r\n                <Nft\r\n                  key={_nft.index}\r\n                  buyNft={() => buyNft(_nft.wineId)}\r\n                  nft={{\r\n                    ..._nft,\r\n                  }}\r\n                  data={giftNft}\r\n                />\r\n              ))}\r\n            </Row>\r\n          </>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nNftList.propTypes = {\r\n  // props passed into this component\r\n  minterContract: PropTypes.instanceOf(Object),\r\n  updateBalance: PropTypes.func.isRequired,\r\n};\r\n\r\nNftList.defaultProps = {\r\n  minterContract: null,\r\n};\r\n\r\nexport default NftList;\r\n","export default __webpack_public_path__ + \"static/media/logo.fce7f206.png\";","import React from \"react\";\r\nimport Cover from \"./components/minter/Cover\";\r\nimport { Notification } from \"./components/ui/Notifications\";\r\nimport Wallet from \"./components/wallet\";\r\nimport { useBalance, useWineryContract } from \"./hooks\";\r\nimport Nfts from \"./components/minter/nfts\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport \"./App.css\";\r\nimport { Container, Nav } from \"react-bootstrap\";\r\nimport logo from \"./assets/logo.png\"\r\n\r\nconst App = function AppWrapper() {\r\n  const { address, destroy, connect } = useContractKit();\r\n\r\n  //  fetch user's celo balance using hook\r\n  const { balance, getBalance } = useBalance();\r\n\r\n  // initialize the NFT mint contract\r\n  const wineryContract = useWineryContract();\r\n\r\n  return (\r\n    <>\r\n      <Notification />\r\n      <Nav className=\"nav justify-content-between px-5 py-3\">\r\n        <Nav.Item>\r\n          <img className=\"logo_img\" src={logo} alt=\"Logo Image\"/>\r\n          <span className=\"logo_name\">Winery</span>\r\n        </Nav.Item>\r\n        {address ? (\r\n          <Nav.Item>\r\n            {/*display user wallet*/}\r\n            <Wallet\r\n              address={address}\r\n              amount={balance.CELO}\r\n              symbol=\"CELO\"\r\n              destroy={destroy}\r\n            />\r\n          </Nav.Item>\r\n          ) : (\r\n          <Nav.Item>\r\n            <button\r\n              onClick={() => connect().catch((e) => console.log(e))}\r\n            >Get started</button>\r\n          </Nav.Item>\r\n        )}\r\n      </Nav>\r\n      {address ? (\r\n        <Container fluid=\"md\">\r\n          <main>\r\n            <Nfts\r\n              name=\"Winery Marketplace\"\r\n              updateBalance={getBalance}\r\n              minterContract={wineryContract}\r\n            />\r\n          </main>\r\n        </Container>\r\n      ) : (\r\n        <Cover connect={connect} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { useContractKit } from '@celo-tools/use-contractkit';\r\n\r\nexport const useBalance = () => {\r\n  const { address, kit } = useContractKit();\r\n  const [balance, setBalance] = useState(0);\r\n\r\n\r\n  const getBalance = useCallback(async () => {\r\n\r\n    // fetch a connected wallet token balance\r\n    const value = await kit.getTotalBalance(address);\r\n    setBalance(value);\r\n  }, [address, kit]);\r\n\r\n  useEffect(() => {\r\n    if (address || balance) getBalance();\r\n  }, [address, getBalance, balance]);\r\n\r\n  return {\r\n    balance,\r\n    getBalance,\r\n  };\r\n};\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  ContractKitProvider,\r\n  Alfajores,\r\n  NetworkNames,\r\n} from \"@celo-tools/use-contractkit\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@celo-tools/use-contractkit/lib/styles.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContractKitProvider\r\n      networks={[Alfajores]}\r\n      network={{\r\n        name: NetworkNames.Alfajores,\r\n        rpcUrl: \"https://alfajores-forno.celo-testnet.org\",\r\n        graphQl: \"https://alfajores-blockscout.celo-testnet.org/graphiql\",\r\n        explorer: \"https://alfajores-blockscout.celo-testnet.org\",\r\n        chainId: 44787,\r\n      }}\r\n      dapp={{\r\n        name: \"Winery NFT Marketplace\",\r\n        description: \"Showcasing winery NFTs\",\r\n      }}\r\n    >\r\n      <App />\r\n    </ContractKitProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}